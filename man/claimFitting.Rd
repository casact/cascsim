% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sim.R
\name{claimFitting}
\alias{claimFitting}
\title{Claim data fitting analysis at line/type/status level}
\usage{
claimFitting(object, claimData, ...)
}
\arguments{
\item{object}{Simulation object}

\item{claimData}{claim data including existing claims for RBNER and claim reopenness analysis}

\item{startDate}{Date after which claims are analyzed}

\item{evaluationDate}{Date of evaluation for existing claims and IBNR}

\item{lineList}{List of business lines to be included in claim fitting}

\item{typeList}{List of claim types to be included in claim fitting}

\item{discreteDist}{List of discrete distributions to try fitting (report lag, settlemet lag, frequency)}

\item{continuousDist}{List of continuous distribution to try fitting (severity)}

\item{copulaList}{List of copula to try fitting}

\item{fReportLag}{Boolean variable to indicate whether report lag needs to be fitted.}

\item{fSettlementLag}{Boolean variable to indicate whether settlement lag needs to be fitted.}

\item{fFrequency}{Boolean variable to indicate whether monthly frequency needs to be fitted.}

\item{fSeverity}{Boolean variable to indicate whether severity needs to be fitted.}

\item{fSSRCorrelation}{Boolean variable to indicate whether copula among severity, report lag and settlement lag needs to be fitted.}

\item{fFreqCorrelation}{Boolean variable to indicate whether copula among frequencies of business lines needs to be fitted.}

\item{copulaTest}{Whether to test copula. The testing could take a very long time.}

\item{iTotalLoss}{Boolean variable to indicate whether total loss before deductible and limit is available for severity fitting}

\item{fDeductible}{Boolean variable to indicate whether deductible empirical distribution needs to be fitted.}

\item{fLimit}{Boolean variable to indicate whether limit empirical distribution needs to be fitted.}

\item{check}{Boolean variable to indicate whether graph of each tried distribution fitting needs to be generated and saved.}
}
\description{
Claim data fitting analysis at line/type/status level
}
\examples{
library(cascsim)
data(claimdata)
lines<-c("Auto","Property","Liab")
types<-c("N","H")
#exposure index
index1 <- new("Index",monthlyIndex=c(rep(1,11),cumprod(c(1,rep(1.5^(1/12),11))),
cumprod(c(1.5,rep((1.3/1.5)^(1/12),11))),
cumprod(c(1.3,rep((1.35/1.3)^(1/12),11))),cumprod(c(1.35,rep((1.4/1.35)^(1/12),11))),rep(1.4,301)))
#severity index
index2 <- new("Index",monthlyIndex=c(cumprod(c(1,rep(1.03^(1/12),59))),rep(1.03^(5),300)))
objan <- new("ClaimType", line="Auto",claimType="N",exposureIndex=index1,severityIndex=index2)
objah <- new("ClaimType", line="Auto",claimType="H",exposureIndex=index1,severityIndex=index2)
objpn <- new("ClaimType", line="Property",claimType="N",exposureIndex=index1,severityIndex=index2)
objph <- new("ClaimType", line="Property",claimType="H",exposureIndex=index1,severityIndex=index2)
objln <- new("ClaimType", line="Liab",claimType="N",exposureIndex=index1,severityIndex=index2)
objlh <- new("ClaimType", line="Liab",claimType="H",exposureIndex=index1,severityIndex=index2)
objlist <- list(objan,objah,objpn,objph,objln,objlh)
simobj <- new("Simulation",lines=lines,types=types,claimobjs=objlist,iFit=TRUE, 
iCopula=TRUE, iReport=TRUE)
simobj <- claimFitting(simobj,claimdata)
}
